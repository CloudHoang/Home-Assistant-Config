################################################################
## Packages / Server Status
## Dependencies / Glances - https://nicolargo.github.io/glances/
################################################################
homeassistant:
  customize:
    sensor.ha_uptime:
      friendly_name: Home Assistant Uptime
      icon: mdi:timer
    sensor.server_uptime:
      friendly_name: Server Uptime
      icon: mdi:timer
    sensor.cpu_temperature:
      friendly_name: CPU Temperature
      icon: mdi:thermometer
    sensor.ha_version:
      friendly_name: Home Assistant Version
    sensor.glances_cpu_load:
      friendly_name: CPU Usage
      icon: mdi:desktop-tower
    sensor.glances_disk_overview:
      friendly_name: Disk
      icon: mdi:harddisk
    sensor.disk_temperature:
      friendly_name: Disk Temperature
      icon: mdi:thermometer
    sensor.glances_ram_overview:
      friendly_name: RAM
      icon: mdi:chip
    sensor.glances_linux_distro:
      friendly_name: Linux Distro
      icon: mdi:ubuntu

    sensor.disk_file_system:
      friendly_name: File System
      icon: mdi:harddisk
    sensor.disk_media_vault:
      friendly_name: Media Vault
      icon: mdi:harddisk
    sensor.disk_zoneminder:
      friendly_name: Zoneminder
      icon: mdi:harddisk
    sensor.disk_backup:
      friendly_name: Snapshot Backup
      icon: mdi:harddisk
    sensor.disk_router_usb:
      friendly_name: YAML Backup
      icon: mdi:harddisk

###### STATE CARD
group:
  server_status:
    name: Server Status
    control: hidden
    entities:
      - sensor.glances_cpu_load
      - sensor.cpu_speed
      - sensor.cpu_temperature
      - sensor.glances_disk_overview
      - sensor.glances_ram_overview
      - sensor.server_uptime
      - sensor.ha_uptime
      - sensor.ha_version
      - input_select.log_level
      - weblink.release_log
      - sensor.glances_linux_distro
  server_status_disks:
    name: Disks
    control: hidden
    entities:
      - sensor.disk_file_system
      - sensor.disk_media_vault
      - sensor.disk_zoneminder
      - sensor.disk_backup
      - sensor.disk_router_usb
weblink:
  entities:
    - name: release_log
      url: https://github.com/home-assistant/home-assistant/releases

sensor:
###### VERSIONS
  - platform: command_line
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: Current Version

  - platform: command_line
    name: Installed Version
    command: /srv/homeassistant/bin/hass --version

###### CUSTOM HA/Version
  - platform: template
    sensors:
      ha_version:
        value_template: "{%- if states.sensor.current_version.state == states.sensor.installed_version.state-%}{{states.sensor.installed_version.state}} {% else %}{{states.sensor.current_version.state}} Available{% endif%}"
        icon_template: >-
          {% if states.sensor.current_version.state == states.sensor.installed_version.state %}
            mdi:checkbox-marked
          {% else %}
            mdi:checkbox-blank-outline
          {% endif %}

###### CUSTOM LINUX VERSION
  - platform: command_line
    command: curl -X GET http://localhost:61208/api/2/system
    name: 'glances_linux_distro'
    value_template: '{{ value_json.linux_distro }}'
    scan_interval: 604800

###### UPTIMES
  - platform: uptime
    name: 'HA Uptime'

  - platform: command_line
    command: curl -X GET http://localhost:61208/api/2/uptime
    name: 'Server Uptime'
    value_template: '{{ value[1:-1] }}'
    scan_interval: 720

###### CPU TEMPERATURE
  - platform: command_line
    name: CPU Temperature
    command: sensors | grep -A 0 'Package'| cut -c17-20
    unit_of_measurement: 'Â°C'
###### CPU SPEED
  - platform: cpuspeed
    name: 'CPU Speed'
###### CPU LOAD
  - platform: command_line
    command: curl -X GET http://localhost:61208/api/2/load
    name: 'glances_cpu_load'
    value_template: '{{ value_json.min5 }}'
    unit_of_measurement: '%'
    scan_interval: 300

###### GLANCES
  - platform: glances
    host: localhost
    resources:
      - 'disk_free'
      - 'disk_use'
      - 'memory_use'
      - 'memory_free'

###### HARD DRIVE DISPLAY
  - platform: template
    sensors:
      glances_disk_overview:
        value_template: "{{states.sensor.glances_disk_used.state|float}} GB / {{(states.sensor.glances_disk_total.state|int/1024/1024/1024)|round(0)}} GB"

  - platform: command_line
    command: curl -X GET http://localhost:61208/api/2/fs
    name: 'glances_disk_total'
    value_template: '{{ value_json[0].size }}'
    scan_interval: 604800
###### PYSICAL DRIVE %
  - platform: command_line
    command: df -h / | awk '{print $5}' | grep -v -e "Use%" | sed 's/.$//'
    name: 'Disk File System'
    scan_interval: 3600
    unit_of_measurement: '%'
  - platform: command_line
    command: df -h /mnt/media_vault | awk '{print $5}' | grep -v -e "Use%" | sed 's/.$//'
    scan_interval: 3600
    unit_of_measurement: '%'
    name: 'Disk Media Vault'
  - platform: command_line
    command: df -h /mnt/backup | awk '{print $5}' | grep -v -e "Use%" | sed 's/.$//'
    name: 'Disk Backup'
    scan_interval: 3600
    unit_of_measurement: '%'
  - platform: command_line
    command: df -h /mnt/zoneminder | awk '{print $5}' | grep -v -e "Use%" | sed 's/.$//'
    name: 'Disk Zoneminder'
    scan_interval: 3600
    unit_of_measurement: '%'
  - platform: command_line
    command: df -h /mnt/router_usb | awk '{print $5}' | grep -v -e "Use%" | sed 's/.$//'
    name: 'Disk Router USB'
    scan_interval: 3600
    unit_of_measurement: '%'
##### CUSTOM RAM DISPLAY
  - platform: template
    sensors:
      glances_ram_overview:
        value_template: "{{states.sensor.glances_ram_used.state|int}} MB / {{(states.sensor.glances_ram_total.state|int/1024/1024+1)|round(0)}} MB"

  - platform: command_line
    command: curl -X GET http://localhost:61208/api/2/mem/total
    name: 'glances_ram_total'
    value_template: '{{ value_json.total }}'
    scan_interval: 604800

################### Logger level
input_select:
  log_level:
    name: Log Level
    options:
     - warn
     - fatal
     - error
     - warning
     - warn
     - info
     - debug
     - notset
    initial: error

############################# Sets Logging Level
automation:
  - alias: Log Level
    trigger:
      - platform: state
        entity_id: input_select.log_level
    action:
      - service: logger.set_level
        data_template:
          homeassistant.components: "{{ trigger.to_state.state }}"
