################################################################
## Packages / Utilities
################################################################
homeassistant:
  customize:
    script.backup_config:
      friendly_name: Backup Configuration
      icon: mdi:backup-restore
    script.update_ha:
      friendly_name: Update Home Assistant
      icon: mdi:package-variant
    script.restart_ha:
      friendly_name: Restart Home Assistant
      icon: mdi:restart
    script.clear_log:
      friendly_name: 'Clear Log File'
      icon: mdi:eraser
    script.clear_tts_cache:
      friendly_name: Clear TTS cache
      icon: mdi:shredder
    sensor.last_commit:
      icon: mdi:github-box
    sensor.last_backup:
      friendly_name: Last YAML Backup
      icon: mdi:cloud-upload
    sensor.last_snapshot:
      icon: mdi:camera-gopro
    script.kodi_restart:
      friendly_name: Restart Kodi
      emulated_hue_hidden: false
      emulated_hue_name: "Restart Kodi"
      icon: mdi:kodi
###### STATE CARD #######################################################
group:
  utilities:
    name: Utilities
    control: hidden
    entities:
      - script.restart_ha
      - script.update_ha
      - script.clear_log
      - script.clear_tts_cache
      - script.kodi_restart
  backup:
    name: Backup
    control: hidden
    entities:
      - automation.auto_backup
      - script.backup_config
      - sensor.last_commit
      - sensor.last_backup
      - sensor.last_snapshot
#########################################################################
script:
  update_ha:
    sequence:
      - service: tts.clear_cache
      - service: shell_command.update_ha
  restart_ha:
    sequence:
      - service: homeassistant.turn_on
        entity_id: input_boolean.restarts
      - service: tts.clear_cache
      - service: shell_command.del_log
      - service: shell_command.restart_ha
  clear_log:
     sequence:
       - service: shell_command.del_log
  backup_config:
     sequence:
       - service: tts.clear_cache
       - service: shell_command.backup_config
  clear_tts_cache:
    sequence:
      - service: tts.clear_cache
  kodi_restart:
    sequence:
       - service_template: >-
          {% if states.media_player.kodi_livingroom.state != 'off' %} shell_command.kodi_kill
          {% else %} shell_command.blank_shell
          {% endif %}
       - delay: 00:00:05
       - service: shell_command.kodi_start
#########################################################################
automation:
  - alias: "Auto Backup"
    initial_state: 'on'
    trigger:
      platform: template
      value_template: "{{ states('sensor.last_commit') > states('sensor.last_backup') }}"
    action:
      - service: script.backup_config
#########################################################################
sensor:
###### Latest github Commit
  - platform: command_line
    command: "python /home/homeassistant/.homeassistant/python_scripts/latest_commit.py"
    name: 'Last Commit'
    scan_interval: 60

###### Latest config backup
  - platform: command_line
    command: "python /home/homeassistant/.homeassistant/python_scripts/latest_backup.py"
    name: 'Last Backup'
    scan_interval: 60

###### Latest snapshot backup
  - platform: command_line
    command: "python /home/homeassistant/.homeassistant/python_scripts/latest_snapshot.py"
    name: 'Last Snapshot'
    scan_interval: 60

shell_command:
  backup_config: 'sudo bash /home/homeassistant/.homeassistant/shell/backup_config.sh'
  update_ha: 'sudo bash /home/homeassistant/.homeassistant/shell/update_ha.sh </dev/null >> /home/homeassistant/.homeassistant/shell/update_ha.log 2>&1 &'
  restart_ha: 'sudo hassctl restart'
  del_log: rm /home/homeassistant/.homeassistant/home-assistant.log && touch /home/homeassistant/.homeassistant/home-assistant.log && chown -R -v homeassistant:homeassistant /home/homeassistant/.homeassistant/home-assistant.log
  kodi_start: 'sudo bash /home/homeassistant/.homeassistant/shell/kodi_start.sh &>/dev/null &'
  kodi_kill: 'sudo pkill -9 -f kodi &>/dev/null &'
  blank_shell: ' '
